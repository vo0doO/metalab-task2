Index: [new]webpack.config.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/[new]webpack.config.js b/[new]webpack.config.js
new file mode 100644
--- /dev/null	(date 1642961244782)
+++ b/[new]webpack.config.js	(date 1642961244782)
@@ -0,0 +1,132 @@
+const path = require('path');
+import HtmlWebpackPlugin from 'html-webpack-plugin';
+const MiniCssExtractPlugin = require('mini-css-extract-plugin');
+const PugPlugin = require('../..');
+
+const isProduction = false; // process.env.NODE_ENV === 'production';
+module.exports = {
+  mode: 'production',
+  devtool: isProduction ? false : 'source-map',
+
+  resolve: {
+    // aliases used in the code example
+    alias: {
+      App: path.join(__dirname, 'src/app/'),
+      Images: path.join(__dirname, 'src/assets/images/'),
+      Styles: path.join(__dirname, 'src/assets/styles/'),
+      Templates: path.join(__dirname, 'src/templates/'),
+    },
+  },
+
+  output: {
+    path: path.join(__dirname, 'public'),
+    publicPath: '/',
+    filename: '[name].js',
+  },
+
+  entry: {
+    styles: './src/assets/styles/common.scss',
+    'about-styles': './src/assets/styles/about.css',
+    main: './src/main.js',
+    // main: {
+    //   import: './src/main.js',
+    //   filename: '[name]-[contenthash:4].js',
+    // },
+    index: './src/templates/index.pug',
+    about: './src/templates/about.html',
+  },
+
+  plugins: [
+    new HtmlWebpackPlugin({
+      template: 'src/templates/index.pug',
+      filename: 'index.html',
+    }),
+    new HtmlWebpackPlugin({
+      template: 'src/templates/about.html',
+      filename: 'about.html',
+    }),
+    new MiniCssExtractPlugin(),
+  ],
+
+  module: {
+    rules: [
+      {
+        test: /\.pug$/,
+        loader: PugPlugin.loader, // the pug-loader is already included in the PugPlugin
+        options: {
+          method: 'render',
+          esModule: true,
+        },
+      },
+      // image resources processing via require() in pug
+      {
+        test: /\.(png|jpg|jpeg|ico)/,
+        type: 'asset/resource',
+        generator: {
+          filename: 'assets/img/[name].[hash][ext][query]',
+        },
+      },
+
+      // style loader
+      {
+        test: /\.(css|sass|scss)$/,
+        use: [
+          {
+            loader: MiniCssExtractPlugin.loader,
+          },
+          {
+            loader: 'css-loader',
+            options: {},
+          },
+          {
+            loader: 'sass-loader',
+            options: {},
+          },
+        ],
+      },
+
+      {
+        test: /\.html$/,
+        loader: 'html-loader',
+      },
+    ],
+  },
+
+  optimization: {
+    splitChunks: {
+      // chunks: 'all',
+      maxSize: 5000,
+      minSize: 5000,
+    },
+  },
+
+  performance: {
+    hints: isProduction ? 'error' : 'warning',
+    // в режиме разработки размер CSS и JS может быть больше, чем в рабочем
+    maxEntrypointSize: isProduction ? 1024000 : 4096000,
+    maxAssetSize: isProduction ? 1024000 : 4096000,
+  },
+
+  devServer: {
+    static: {
+      directory: path.join(__dirname, 'public'),
+    },
+    compress: true,
+    port: 9000,
+    https: false,
+    // открыть в браузере по умолчанию
+    // open: true,
+    // Определение обозревателя разработки
+    open: {
+      app: {
+        name: 'Firefox',
+      },
+    },
+    liveReload: true,
+    hot: true,
+
+    client: {
+      progress: true,
+    },
+  },
+};
