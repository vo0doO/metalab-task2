-
  var args = {
    tag: "",  /* <-- required */
    color: "", /* <-- "" === default tag value */
    weight: "", /* <-- "" === default tag value */
    transform: "",  /* <-- "" === default tag value */
    alignment: "",  /* <-- "" === default tag value */
    size: "", /* <-- "" === default tag value */
    lineHeight: "", /* <-- "" === default tag value */
    content: "",  /* <-- "" === default tag value */
  }
mixin text(args)
  -
    var tag = args.tag
    var color = args.color
    var weight = args.weight
    var transform = args.transform
    var alignment = args.alignment
    var size = args.size
    var lineHeight = args.lineHeight
    var content = args.content
    var textClass = "text"

    var weights = ["bold", "normal"]
    var colors = ["dark-shade-100", "dark-shade-75", "dark-shade-50", "dark-shade-25", "dark-shade-5", "purple", "green"]
    var transformations = ["in-uppercase", "in-lowercase", "none"]
    var alignments = ["right", "horizontal-center", "left", "top", "bottom", "vertical-center"]
    var sizes = ["larger", "large", "medium", "small", "smaller"]
    var lineHeights = ["12px", "14px", "18px", "17px", "117percent", "129percent", "171percent"]

    if (colors.includes(color)) {
      textClass += ` text_color_${color}`
    }

    if (weights.includes(weight)) {
      textClass += ` text_weight_${weight}`
    }

    if (transformations.includes(transform)) {
      textClass += ` text_transform_${transform}`
    }

    if (alignments.includes(alignment)) {
      textClass += ` text_align_${alignment}`
    }

    if (sizes.includes(size)) {
      textClass += ` text_size_${size}`
    }

    if (lineHeights.includes(lineHeight)) {
      textClass += ` text_line-height_${lineHeight}`
    }

  .dic(class=wrapperClass)
    case tag
      when "h1": h1(class=textClass)=content
      when "h2": h2(class=textClass)=content
      when "h3": h3(class=textClass)=content
      when "p": p(class=textClass)=content
      when "strong": strong(class=textClass)=content
      when "span": span(class=textClass)=content
      when "small": small(class=textClass)=content